# type: ignore
"""added models for tscmcheck business-product and vendor

Revision ID: 357b8865c8ce
Revises: ddc1b07aa56f
Create Date: 2023-08-07 19:37:23.450107

"""
import warnings

import sqlalchemy as sa
from alembic import op
from litestar.contrib.sqlalchemy.types import GUID, ORA_JSONB, DateTimeUTC

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB

# revision identifiers, used by Alembic.
revision = "357b8865c8ce"
down_revision = "ddc1b07aa56f"
branch_labels = None
depends_on = None


def upgrade():
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()


def downgrade():
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()


def schema_upgrades():
    """Schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "business_product",
        sa.Column("key", sa.String(length=20), nullable=False),
        sa.Column("name", sa.String(length=60), nullable=False),
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_business_product")),
        sa.UniqueConstraint("key", name=op.f("uq_business_product_key")),
        sa.UniqueConstraint("name", name=op.f("uq_business_product_name")),
    )
    op.create_table(
        "cpe",
        sa.Column("routername", sa.String(), nullable=False),
        sa.Column("os", sa.String(), nullable=False),
        sa.Column("mgmt_ip", sa.String(), nullable=False),
        sa.Column("sec_mgmt_ip", sa.String(), nullable=True),
        sa.Column("device_id", sa.String(length=255), nullable=False),
        sa.Column("_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("device_id", name=op.f("pk_cpe")),
    )
    op.create_table(
        "vendor",
        sa.Column("name", sa.String(length=60), nullable=False),
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_vendor")),
        sa.UniqueConstraint("name", name=op.f("uq_vendor_name")),
    )
    op.create_table(
        "tscm_check",
        sa.Column("key", sa.String(length=50), nullable=False),
        sa.Column("regex", sa.String(length=200), nullable=True),
        sa.Column("python_code", sa.Text(), nullable=True),
        sa.Column("remediation_commands", sa.Text(), nullable=True),
        sa.Column("vendor_id", sa.GUID(length=16), nullable=False),
        sa.Column("service_id", sa.GUID(length=16), nullable=False),
        sa.Column("device_model", sa.String(length=60), nullable=True),
        sa.Column("replaces_parent_check", sa.String(length=100), nullable=True),
        sa.Column("has_child_checks", sa.Boolean(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["service_id"], ["business_product.id"], name=op.f("fk_tscm_check_service_id_business_product")
        ),
        sa.ForeignKeyConstraint(["vendor_id"], ["vendor.id"], name=op.f("fk_tscm_check_vendor_id_vendor")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tscm_check")),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """Schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tscm_check")
    op.drop_table("vendor")
    op.drop_table("cpe")
    op.drop_table("business_product")
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
