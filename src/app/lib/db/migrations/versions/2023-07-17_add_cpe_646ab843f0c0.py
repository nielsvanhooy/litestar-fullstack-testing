# type: ignore
"""add cpe

Revision ID: 646ab843f0c0
Revises: ddc1b07aa56f
Create Date: 2023-07-17 12:18:16.864004

"""
import warnings

import sqlalchemy as sa
from alembic import op
from litestar.contrib.sqlalchemy.types import GUID, ORA_JSONB, DateTimeUTC

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB

# revision identifiers, used by Alembic.
revision = "646ab843f0c0"
down_revision = "ddc1b07aa56f"
branch_labels = None
depends_on = None


def upgrade():
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()


def downgrade():
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()


def schema_upgrades():
    """Schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cpe",
        sa.Column("device_id", sa.String(length=255), nullable=False),
        sa.Column("routername", sa.String(), nullable=False),
        sa.Column("os", sa.String(), nullable=False),
        sa.Column("mgmt_ip", sa.String(), nullable=False),
        sa.Column("sec_mgmt_ip", sa.String(), nullable=True),
        sa.Column("_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("device_id", name=op.f("pk_cpe")),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """Schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("cpe")
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
