# type: ignore
"""changed cpe

Revision ID: 592c960002ad
Revises: 357b8865c8ce
Create Date: 2023-08-23 11:09:37.453173

"""
import warnings

import sqlalchemy as sa
from alembic import op
from litestar.contrib.sqlalchemy.types import GUID, ORA_JSONB, DateTimeUTC


__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB

# revision identifiers, used by Alembic.
revision = '592c960002ad'
down_revision = '357b8865c8ce'
branch_labels = None
depends_on = None


def upgrade():
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade():
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cpe', schema=None) as batch_op:
        batch_op.add_column(sa.Column('vendor_id', sa.GUID(length=16), nullable=False))
        batch_op.add_column(sa.Column('service_id', sa.GUID(length=16), nullable=False))
        batch_op.create_foreign_key(batch_op.f('fk_cpe_vendor_id_vendor'), 'vendor', ['vendor_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('fk_cpe_service_id_business_product'), 'business_product', ['service_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('tscm_check', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tscm_check_service_id_business_product', type_='foreignkey')
        batch_op.drop_constraint('fk_tscm_check_vendor_id_vendor', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_tscm_check_vendor_id_vendor'), 'vendor', ['vendor_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('fk_tscm_check_service_id_business_product'), 'business_product', ['service_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###

def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tscm_check', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_tscm_check_service_id_business_product'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_tscm_check_vendor_id_vendor'), type_='foreignkey')
        batch_op.create_foreign_key('fk_tscm_check_vendor_id_vendor', 'vendor', ['vendor_id'], ['id'])
        batch_op.create_foreign_key('fk_tscm_check_service_id_business_product', 'business_product', ['service_id'], ['id'])

    with op.batch_alter_table('cpe', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_cpe_service_id_business_product'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_cpe_vendor_id_vendor'), type_='foreignkey')
        batch_op.drop_column('service_id')
        batch_op.drop_column('vendor_id')

    # ### end Alembic commands ###

def data_upgrades():
    """Add any optional data upgrade migrations here!"""

def data_downgrades():
    """Add any optional data downgrade migrations here!"""
